# Generated by Django 4.2.12 on 2025-08-30 00:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.CharField(help_text='API ID от Telegram', max_length=255)),
                ('api_hash', models.CharField(help_text='API Hash от Telegram', max_length=255)),
                ('session_file', models.TextField(blank=True, help_text='Содержимое файла сессии Telethon', null=True)),
                ('is_active', models.BooleanField(default=False, help_text='Активен ли бот для данного пользователя')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bot_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Настройки бота',
                'verbose_name_plural': 'Настройки ботов',
                'db_table': 'bot_settings',
            },
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system_prompt', models.TextField(help_text='Системный промпт, сгенерированный на основе ответов пользователя')),
                ('negative_prompt', models.TextField(blank=True, help_text='Негативный промпт (что боту нельзя делать)', null=True)),
                ('custom_prompt', models.TextField(blank=True, help_text='Кастомный промпт (для тарифа Enterprise)', null=True)),
                ('bot_settings', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prompt', to='assistante.botsettings')),
            ],
            options={
                'verbose_name': 'Промпт',
                'verbose_name_plural': 'Промпты',
                'db_table': 'prompts',
            },
        ),
        migrations.CreateModel(
            name='ManagedChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.BigIntegerField(help_text='ID чата или канала в Telegram', unique=True)),
                ('title', models.CharField(help_text='Название чата', max_length=255)),
                ('is_active', models.BooleanField(default=True, help_text='Включен ли мониторинг в этом чате')),
                ('bot_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_chats', to='assistante.botsettings')),
            ],
            options={
                'verbose_name': 'Управляемый чат',
                'verbose_name_plural': 'Управляемые чаты',
                'db_table': 'managed_chats',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='BotActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, help_text='Дата, за которую собрана статистика')),
                ('messages_processed', models.PositiveIntegerField(default=0, help_text='Количество обработанных сообщений')),
                ('most_frequent_topic', models.CharField(blank=True, max_length=255, null=True)),
                ('bot_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_stats', to='assistante.botsettings')),
            ],
            options={
                'verbose_name': 'Активность бота',
                'verbose_name_plural': 'Статистика активности',
                'db_table': 'bot_activity',
                'ordering': ['-date'],
                'unique_together': {('bot_settings', 'date')},
            },
        ),
    ]
